// Nav


@include tui('.nav') {
  display: flex;
  flex-wrap: wrap;
  padding-left: 0;
  margin-bottom: 0;
  list-style: none;
}

@include tui('.nav-link') {
  display: block;
  padding: $nav-link-padding-y $nav-link-padding-x;

  @include hover-focus {
    text-decoration: none;
  }

  // Disabled state lightens text
  &.disabled {
    color: $nav-link-disabled-color;
    cursor: not-allowed;
  }
}

//
// Tabs
//

@include tui('.nav-tabs') {
  border-bottom: $nav-tabs-border-width solid $nav-tabs-border-color;

  .nav-item {
    margin-bottom: -$nav-tabs-border-width;
    margin-right: $nav-tabs-border-width * 2;
  }

  .nav-link {
    border: $nav-tabs-border-width solid transparent;
    @include border-top-radius($nav-tabs-border-radius);

    @include hover-focus {
      border-color: $nav-tabs-link-hover-border-color;
    }

    &.disabled {
      color: $nav-link-disabled-color;
      background-color: transparent;
      border-color: transparent;
      cursor: not-allowed;
    }
  }

  .nav-link.active,
  .nav-item.show .nav-link {
    color: $nav-tabs-link-active-color;
    background-color: $nav-tabs-link-active-bg;
    border-color: $nav-tabs-link-active-border-color;
  }

  .popout-menu {
    // Make dropdown border overlap tab border
    margin-top: -$nav-tabs-border-width;
    // Remove the top rounded corners here since there is a hard edge above the menu
    @include border-top-radius(0);
  }
}

//
// Pills
//

@include tui('.nav-pills') {
  .nav-link {
    @include border-radius($nav-pills-border-radius);
  }

  .nav-link.active,
  .show > .nav-link {
    color: $nav-pills-link-active-color;
    background-color: $nav-pills-link-active-bg;
  }
}


//
// Justified variants
//

@include tui('.nav-fill') {
  .nav-item {
    flex: 1 1 auto;
    text-align: center;
  }
}

@include tui('.nav-justified') {
  .nav-item {
    flex-basis: 0;
    flex-grow: 1;
    text-align: center;
  }
}


// Tabbable tabs
//
// Hide tabbable panes to start, show them when `.active`

@include tui('.tab-content') {
  > .tab-pane {
    display: none;
  }
  > .active {
    display: block;
  }
}


// Navbar
// Navbar brand
// Navbar nav
// Navbar text
// Navbar divider
// Responsive navbar
// Navbar position
// Navbar themes


// Navbar
@include tui('.navbar') {
  position: relative;
  display: flex;
  flex-wrap: wrap; // allow us to do the line break for collapsing content
  align-items: center;
  justify-content: space-between; // space out brand from logo
  padding: $navbar-padding-y $navbar-padding-x;

  // Because flex properties aren't inherited, we need to redeclare these first
  // few properities so that content nested within behave properly.
  > .container,
  > .container-fluid {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    justify-content: space-between;
  }
}


// Navbar brand
//
// Used for brand, project, or site names.
@include tui('.navbar-brand') {
  display: inline-block;
  padding-top: $navbar-brand-padding-y;
  padding-bottom: $navbar-brand-padding-y;
  margin-right: $navbar-padding-x;
  font-size: $navbar-brand-font-size;
  line-height: inherit;
  white-space: nowrap;

  @include hover-focus {
    text-decoration: none;
  }
}

// Navbar nav
//
// Custom navbar navigation (doesn't require `.nav`, but does make use of `.nav-link`).

@include tui('.navbar-nav') {
  display: flex;
  flex-direction: column; // cannot use `inherit` to get the `.navbar`s value
  padding-left: 0;
  margin-bottom: 0;
  list-style: none;

  .nav-link {
    padding-right: 0;
    padding-left: 0;
  }

  .popout-menu {
    position: static;
    float: none;
  }
}

// Navbar text
@include tui('.navbar-text') {
  display: inline-block;
  padding-top: $nav-link-padding-y;
  padding-bottom: $nav-link-padding-y;
}


// Responsive navbar
//
// Custom styles for responsive collapsing and toggling of navbar contents.
// Powered by the collapse Bootstrap JavaScript plugin.

// When collapsed, prevent the toggleable navbar contents from appearing in
// the default flexbox row orienation. Requires the use of `flex-wrap: wrap`
// on the `.navbar` parent.
@include tui('.navbar-collapse') {
  flex-basis: 100%;
  flex-grow: 1;
  // For always expanded or extra full navbars, ensure content aligns itself
  // properly vertically. Can be easily overridden with flex utilities.
  align-items: center;
}


// Button for toggling the navbar when in its collapsed state
@include tui('.navbar-toggler') {
  padding: $navbar-toggler-padding-y $navbar-toggler-padding-x;
  font-size: $navbar-toggler-font-size;
  line-height: 1;
  background-color: transparent; // remove default button style
  border: $border-width solid transparent; // remove default button style
  //@include border-radius($navbar-toggler-border-radius);

  @include hover-focus {
    text-decoration: none;
  }

  // Opinionated: add "hand" cursor to non-disabled .navbar-toggler elements
  &:not(:disabled):not(.disabled) {
    cursor: pointer;
  }
}

// Keep as a separate element so folks can easily override it with another icon
// or image file as needed.
@include tui('.navbar-toggler-icon') {
  display: inline-block;
  width: 1.5em;
  height: 1.5em;
  vertical-align: middle;
  content: "";
  background: no-repeat center center;
  background-size: 100% 100%;
}


@each $breakpoint in map-keys($grid-breakpoints) {
  $next: breakpoint-next($breakpoint, $grid-breakpoints);
  $infix: breakpoint-infix($next, $grid-breakpoints);

  @include tui('.navbar-expand#{$infix}') {
    @include media-breakpoint-down($breakpoint) {
      > .container,
      > .container-fluid {
        padding-right: 0;
        padding-left: 0;
      }
    }

    @include media-breakpoint-up($next) {
      flex-flow: row nowrap;
      justify-content: flex-start;

      .navbar-nav {
        flex-direction: row;

        .popout-menu {
          position: absolute;
        }

        .nav-link {
          padding-right: $navbar-nav-link-padding-x;
          padding-left: $navbar-nav-link-padding-x;
        }
      }

      // For nesting containers, have to redeclare for alignment purposes
      > .container,
      > .container-fluid {
        flex-wrap: nowrap;
      }

      .navbar-collapse {
        display: flex !important;  // stylelint-disable-line declaration-no-important

        // Changes flex-bases to auto because of an IE10 bug
        flex-basis: auto;
      }

      .navbar-toggler {
        display: none;
      }
    }
  }
  @if ($infix == "") {
    @include tui('.navbar-expand-xs') {
      @include media-breakpoint-down($breakpoint) {
        > .container,
        > .container-fluid {
          padding-right: 0;
          padding-left: 0;
        }
      }

      @include media-breakpoint-up($next) {
        flex-flow: row nowrap;
        justify-content: flex-start;

        .navbar-nav {
          flex-direction: row;

          .popout-menu {
            position: absolute;
          }

          .nav-link {
            padding-right: $navbar-nav-link-padding-x;
            padding-left: $navbar-nav-link-padding-x;
          }
        }

        // For nesting containers, have to redeclare for alignment purposes
        > .container,
        > .container-fluid {
          flex-wrap: nowrap;
        }

        .navbar-collapse {
          display: flex !important;  // stylelint-disable-line declaration-no-important

          // Changes flex-bases to auto because of an IE10 bug
          flex-basis: auto;
        }

        .navbar-toggler {
          display: none;
        }
      }
    }
  }

}


// Navbar themes
//
// Styles for switching between navbars with light or dark background.

// Dark links against a light background
@include tui('.navbar-light') {
  .navbar-brand {
    color: $navbar-light-active-color;

    @include hover-focus {
      color: $navbar-light-active-color;
    }
  }

  .navbar-nav {
    .nav-link {
      color: $navbar-light-color;

      @include hover-focus {
        color: $navbar-light-hover-color;
      }

      &.disabled {
        color: $navbar-light-disabled-color;
      }
    }

    .show > .nav-link,
    .active > .nav-link,
    .nav-link.show,
    .nav-link.active {
      color: $navbar-light-active-color;
    }
  }

  .navbar-toggler {
    color: $navbar-light-color;
    border-color: $navbar-light-toggler-border-color;
  }

  .navbar-toggler-icon {
    background-image: $navbar-light-toggler-icon-bg;
  }

  .navbar-text {
    color: $navbar-light-color;
    a {
      color: $navbar-light-active-color;

      @include hover-focus {
        color: $navbar-light-active-color;
      }
    }
  }
}

// White links against a dark background
@include tui('.navbar-dark') {
  .navbar-brand {
    color: $navbar-dark-active-color;

    @include hover-focus {
      color: $navbar-dark-active-color;
    }
  }

  .navbar-nav {
    .nav-link {
      color: $navbar-dark-color;

      @include hover-focus {
        color: $navbar-dark-hover-color;
      }

      &.disabled {
        color: $navbar-dark-disabled-color;
      }
    }

    .show > .nav-link,
    .active > .nav-link,
    .nav-link.show,
    .nav-link.active {
      color: $navbar-dark-active-color;
    }
  }

  .navbar-toggler {
    color: $navbar-dark-color;
    border-color: $navbar-dark-toggler-border-color;
  }

  .navbar-toggler-icon {
    background-image: $navbar-dark-toggler-icon-bg;
  }

  .navbar-text {
    color: $navbar-dark-color;
    a {
      color: $navbar-dark-active-color;

      @include hover-focus {
        color: $navbar-dark-active-color;
      }
    }
  }
}


// Navbar offcanvas
@include tui('.navbar-offcanvas') {
  overflow: hidden;
  .navbar-toggler {
    border: none;
  }
  .navbar-collapse {
    // Changes flex-bases to auto because of an IE10 bug
    width: 100%;
    position: absolute;
    background-color: inherit;
    top: 56px;
    padding-left: $navbar-padding-x;
    padding-right: $navbar-padding-x;
    z-index: 1;
    @include transition(transform 0.3s ease-in-out);

    &.animation-left2right {
      transform: translateX(-101%);
      &.collapse.show {
        transform: translateX(-$navbar-padding-x);
      }
    }
    &.animation-right2left {
      transform: translateX(101%);
      &.collapse.show {
        transform: translateX(-$navbar-padding-x);
      }
    }
  }
}

@each $breakpoint in map-keys($grid-breakpoints) {
  $next: breakpoint-next($breakpoint, $grid-breakpoints);
  $infix: breakpoint-infix($next, $grid-breakpoints);

  @include tui('.navbar-offcanvas.navbar-expand#{$infix}') {
    overflow: visible;
    @include media-breakpoint-up($next) {
      .navbar-collapse {
        width: auto;
        position: relative;
        background-color: transparent;
        top: auto;
        padding: 0;
        &.animation-left2right {
          transform: none;
          &.collapse.show {
            transform: none;
          }
        }
        &.animation-right2left {
          transform: none;
          &.collapse.show {
            transform: none;
          }
        }
      }
    }
  }
  @if ($infix == "") {
    @include tui('.navbar-offcanvas.navbar-expand-xs') {
      overflow: visible;
      @include media-breakpoint-up($next) {
        .navbar-collapse {
          width: auto;
          position: relative;
          background-color: transparent;
          top: auto;
          padding: 0;
          &.animation-left2right {
            transition: none;
            transform: none;
            &.collapse.show {
              transform: none;
            }
          }
          &.animation-right2left {
            transition: none;
            transform: none;
            &.collapse.show {
              transform: none;
            }
          }
        }
      }
    }
  }

}