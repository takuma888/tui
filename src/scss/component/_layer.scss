// Kill the scroll on the body
body.layer-open {
  overflow: hidden;
}


@include tui('.layer-backdrop') {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: $layer-backdrop-bg;

  // Fade for backdrop
  &.fade { opacity: 0; }
  &.show { opacity: $layer-backdrop-opacity; }
}


@include tui('.layer') {
  position: fixed;
  top: 0;
  left: 0;
  display: none;
  overflow: hidden;
  // Prevent Chrome on Windows from adding a focus outline. For details, see
  // https://github.com/twbs/bootstrap/pull/10951.
  outline: 0;

  &.fade {
    .layer-inner {
      @include transition($modal-transition);
      //transform: translate(0, -100%);
    }
  }
  &.show {
    .layer-inner {
      //transform: translate(0, 0);
    }
  }
}

.layer-open {
  @include tui('.layer') {
    overflow-x: hidden;
    overflow-y: auto;
  }
}

@include tui('.layer-inner') {
  width: 100%;
  position: relative;
}

// Actual modal
@include tui('.modal-content') {
  position: relative;
  display: flex;
  flex-direction: column;
  width: 100%; // Ensure `.modal-content` extends the full width of the parent `.modal-dialog`
  // counteract the pointer-events: none; in the .modal-dialog
  pointer-events: auto;
  background-color: $modal-content-bg;
  background-clip: padding-box;
  //@include box-shadow($modal-content-box-shadow-xs);
  // Remove focus outline from opened modal
  outline: 0;

  &.modal-bordered {
    border: $modal-content-border-width solid $modal-content-border-color;
  }

  &.modal-rounded {
    @include border-radius($modal-content-border-radius);
  }
}


// Modal header
// Top section of the modal w/ title and dismiss
@include tui('.modal-header') {
  display: flex;
  align-items: flex-start; // so the close btn always stays on the upper right corner
  justify-content: space-between; // Put modal header elements (title and dismiss) on opposite ends
  padding: $modal-header-padding;
  border-bottom: $modal-header-border-width solid $modal-header-border-color;
  @include border-top-radius($modal-content-border-radius);

  .close {
    padding: $modal-header-padding;
    // auto on the left force icon to the right even when there is no .modal-title
    margin: (-$modal-header-padding) (-$modal-header-padding) (-$modal-header-padding) auto;
  }
}

// Title text within header
@include tui('.modal-title') {
  margin-bottom: 0;
  line-height: $modal-title-line-height;
}

// Modal body
// Where all modal content resides (sibling of .modal-header and .modal-footer)
@include tui('.modal-body') {
  position: relative;
  // Enable `flex-grow: 1` so that the body take up as much space as possible
  // when should there be a fixed height on `.modal-dialog`.
  flex: 1 1 auto;
  padding: $modal-inner-padding;
}

// Footer (for actions)
@include tui('.modal-footer') {
  display: flex;
  align-items: center; // vertically center
  justify-content: flex-end; // Right align buttons with flex property because text-align doesn't work on flex items
  padding: $modal-inner-padding;
  border-top: $modal-footer-border-width solid $modal-footer-border-color;

  // Easily place margin between footer elements
  > :not(:first-child) { margin-left: .25rem; }
  > :not(:last-child) { margin-right: .25rem; }
}

// Measure scrollbar width for padding body during modal show/hide
@include tui('.layer-scrollbar-measure') {
  position: absolute;
  top: -9999px;
  width: 50px;
  height: 50px;
  overflow: scroll;
}

// Scale up the modal
//@include media-breakpoint-up(sm) {
//  @include tui('.modal-content') {
//    @include box-shadow($modal-content-box-shadow-sm-up);
//  }
//}
