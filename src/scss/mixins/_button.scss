// Button

@mixin button-variant($background, $border, $hover-background: darken($background, 7.5%), $hover-border: darken($border, 10%), $active-background: darken($background, 10%), $active-border: darken($border, 12.5%)) {
  color: color-yiq($background);
  background-color: $background;
  border-color: $border;

  @include hover {
    color: color-yiq($hover-background);
    background-color: $hover-background;
    border-color: $hover-border;
  }

  &:focus,
  &.focus {
    // Avoid using mixin so we can pass custom focus shadow properly
    box-shadow: 0 0 0 $btn-focus-width rgba($border, .5);
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    color: color-yiq($background);
    background-color: $background;
    border-color: $border;
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active,
  .show > &.popout-toggle {
    color: color-yiq($active-background);
    background-color: $active-background;
    border-color: $active-border;
  }
}

@mixin button-outline-variant($color, $color-hover: color-yiq($color), $active-background: $color, $active-border: $color) {
  color: $color;
  background-color: transparent;
  background-image: none;
  border-color: $color;

  &:hover {
    color: $color-hover;
    background-color: $active-background;
    border-color: $active-border;
  }

  &:focus,
  &.focus {
    box-shadow: 0 0 0 $btn-focus-width rgba($color, .5);
  }

  &.disabled,
  &:disabled {
    color: $color;
    background-color: transparent;
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active,
  .show > &.popout-toggle {
    color: color-yiq($active-background);
    background-color: $active-background;
    border-color: $active-border;

    //&:focus {
    //  // Avoid using mixin so we can pass custom focus shadow properly
    //  @if $enable-shadows and $btn-active-box-shadow != none {
    //    box-shadow: $btn-active-box-shadow, 0 0 0 $btn-focus-width rgba($color, .5);
    //  } @else {
    //    box-shadow: 0 0 0 $btn-focus-width rgba($color, .5);
    //  }
    //}
  }
}

// Button sizes
@mixin button-size($padding-y, $padding-x, $font-size, $line-height) {
  padding: $padding-y $padding-x;
  font-size: $font-size;
  line-height: $line-height;
  border-radius: 0;
}


@mixin button-rounded() {
  border-radius: $border-radius;
}

@mixin button-gradient($background, $hover-background: darken($background, 7.5%)) {
  @include gradient-y(lighten($background, 7.5%), $background);
  @include hover {
    @include gradient-y(lighten($hover-background, 7.5%), $hover-background);
  }
}

@mixin button-boxshadow($border) {
  @include box-shadow($btn-box-shadow);
  &:focus,
  &.focus {
    // Avoid using mixin so we can pass custom focus shadow properly
    box-shadow: $btn-box-shadow, 0 0 0 $btn-focus-width rgba($border, .5);
  }
  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active,
  .show > &.popout-toggle {
    &:focus {
      // Avoid using mixin so we can pass custom focus shadow properly
      box-shadow: $btn-active-box-shadow, 0 0 0 $btn-focus-width rgba($border, .5);
    }
  }
}