// Space

// Margin and Padding


@mixin space-utils($infix) {
  @each $prop, $abbrev in (margin: m, padding: p) {
    @each $size, $length in $spacers {

      @include tui('.#{$abbrev}#{$infix}-#{$size}') {
        #{$prop}: $length !important;
      }
      @include tui('.#{$abbrev}t#{$infix}-#{$size}, .#{$abbrev}y#{$infix}-#{$size}') {
        #{$prop}-top: $length !important;
      }
      @include tui('.#{$abbrev}r#{$infix}-#{$size}, .#{$abbrev}x#{$infix}-#{$size}') {
        #{$prop}-right: $length !important;
      }
      @include tui('.#{$abbrev}b#{$infix}-#{$size}, .#{$abbrev}y#{$infix}-#{$size}') {
        #{$prop}-bottom: $length !important;
      }
      @include tui('.#{$abbrev}l#{$infix}-#{$size}, .#{$abbrev}x#{$infix}-#{$size}') {
        #{$prop}-left: $length !important;
      }
    }
  }

  // Some special margin utils
  @include tui('.m#{$infix}-auto') {
    margin: auto !important;
  }
  @include tui('.mt#{$infix}-auto, .my#{$infix}-auto') {
    margin-top: auto !important;
  }
  @include tui('.mr#{$infix}-auto, .mx#{$infix}-auto') {
    margin-right: auto !important;
  }
  @include tui('.mb#{$infix}-auto, .my#{$infix}-auto') {
    margin-bottom: auto !important;
  }
  @include tui('.ml#{$infix}-auto, .mx#{$infix}-auto') {
    margin-left: auto !important;
  }
}


@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    @include space-utils($infix);

    @if ($infix == "") {
      @include space-utils('-xs');
    }
  }
}